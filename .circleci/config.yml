version: 2
jobs:
  build-staging:
    docker:
      - image: circleci/node:16.13.1-browsers
    steps:
      - checkout
      - run: |
          git submodule sync
          git submodule update --init --recursive
          git submodule foreach git fetch --tags
          cd dist/v1/OnsenUI; git fetch --tags; git checkout `git tag | grep "^1." | sort --version-sort | tail -n 1`; cd ../../..; # Latest 1.x
          cd dist/v2/OnsenUI; git fetch --tags; git checkout onsen.io; cd ../../..; # Latest 2.x with documentation fixes
          cd dist/playground; git fetch origin; git checkout gh-pages; git pull; cd ../..;
          cd dist/themeroller; git fetch origin; git checkout gh-pages; git pull; cd ../..;
          sudo npm install -g npm@7.8
          npm install
          cd dist/v2/OnsenUI && npm install && npm run build && cd ../../..
          cd dist/v2/OnsenUI/onsenui && npm run docs && cd ../../../..
          cd dist/v2/OnsenUI/react-onsenui && npm run gen-docs && cd ../../../..
          AWS_BUCKET=${AWS_BUCKET_EN} ./node_modules/.bin/gulp deploy --lang=en
          AWS_BUCKET=${AWS_BUCKET_JA} ./node_modules/.bin/gulp deploy --lang=ja
          # Note: http://s.onsen.io/ and http://s.ja.onsen.io/ directly accesses S3. Nginx and KeyCDN are not used.

  build-production:
    docker:
      - image: circleci/node:16.13.1-browsers
    steps:
      - checkout
      - run: |
          git submodule sync
          git submodule update --init --recursive
          git submodule foreach git fetch --tags
          cd dist/v1/OnsenUI; git fetch --tags; git checkout `git tag | grep "^1." | sort --version-sort | tail -n 1`; cd ../../..; # Latest 1.x
          cd dist/v2/OnsenUI; git fetch --tags; git checkout onsen.io; cd ../../..; # Latest 2.x with documentation fixes
          cd dist/playground; git fetch origin; git checkout gh-pages; git pull; cd ../..;
          cd dist/themeroller; git fetch origin; git checkout gh-pages; git pull; cd ../..;
          sudo npm install -g npm@7.8
          npm install
          cd dist/v2/OnsenUI && npm install && npm run build && cd ../../..
          cd dist/v2/OnsenUI/onsenui && npm run docs && cd ../../../..
          cd dist/v2/OnsenUI/react-onsenui && npm run gen-docs && cd ../../../..
          AWS_BUCKET=${AWS_BUCKET_EN_PROD} ./node_modules/.bin/gulp deploy --lang=en --production
          AWS_BUCKET=${AWS_BUCKET_JA_PROD} ./node_modules/.bin/gulp deploy --lang=ja --production
          # Purge Zone Cache (en) of KeyCDN
          wget https://api.keycdn.com/zones/purge/38819.json --user="${KEY_CDN_API_KEY}" --password='' -v
          cat 38819.json
          # Purge Zone Cache (ja) of KeyCDN
          wget https://api.keycdn.com/zones/purge/38820.json --user="${KEY_CDN_API_KEY}" --password='' -v
          cat 38820.json

workflows:
  version: 2
  publish:
    jobs:
      - build-staging:
          filters:
            branches:
              only:
                - master
                - staging
      - build-production:
          filters:
            branches:
              only:
                - production
