---
author: naoki
date: 2016-09-21
id: onsen-ui-2-is-here
title: "Onsen UI 2.0 正式リリース！"
product: onsen-ui
tags: onsen-ui, react, angular
category: 技術情報
---

<!--![Onsen UI is here!](https://onsen.io/blog/content/images/2016/Sep/onsen_release.png)-->
![Onsen UI is here!](https://onsen.io/blog/content/images/2016/Sep/onsen_release.png)

（この記事は Onsen UI チームの [Andreas Argelius](https://twitter.com/a_argelius) が英語版 Monaca x Onsen ブログに投稿した [Onsen UI 2.0 is here!](https://onsen.io/blog/onsen-ui-2-is-here/) の翻訳です。）

<!--It's been a little over four months since we released the first RC version of Onsen UI 2.0. Since then we have gone through several iterations, ironing out the creases in order to deliver a great UI solution for all hybrid and mobile web app developers out there.-->
Onsen UI 2.0 の最初の RC 版をリリースしてから4ヶ月と少しが経ちました。あれ以来私たちは、全てのハイブリッドモバイル Web アプリの開発者に最高の UI ソリューションをもたらすべく、改善を続けてきました。

<!--Onsen UI is an UI framework & tools to create native mobile apps with HTML5 hybrid app technology. It is designed to make it easy and efficient for developers to design apps. We aim to make the UI components easy to use while still giving developers a lot of power to customize their behavior.-->
Onsen UI は、HTML5 ハイブリッドアプリの技術を使ってネイティブモバイルアプリを作るための UI フレームワーク＆ツール群です。開発者が簡単かつ効率的にアプリをデザインできるように設計されています。使いやすく、カスタマイズしやすくもある、そんな UI コンポーネントの提供を目標としています。

<!-- more -->

<!--While Onsen UI 1.x was based on AngularJS, the new version 2 has no library dependencies. This is the biggest change in Onsen UI 2.0. As well as increasing performance and making the file size smaller, it also makes it easy to include the components in any project, whether it's written in React, Angular, Vue.js, some other framework or even pure JavaScript. There are so many exciting libraries and frameworks coming out lately and we want to make it possible for anyone to use Onsen UI in their apps!-->
Onsen UI 1.x は AngularJS をベースにしていましたが、Onsen UI 2.0 はどのライブラリにも依存していません。これが Onsen UI 2.0 での最も大きな変更となります。これにより、パフォーマンスの向上とファイルサイズの縮小に加えて、UI コンポーネントを任意のプロジェクトで利用可能にすることを実現しました。React、Angular、Vue.js などのフレームワークで記述されたプロジェクトはもちろん、純粋な JavaScript プロジェクトでも Onsen UI のコンポーネントを利用できます。その他にも素晴らしいライブラリやフレームワークが続々と出てきていますが、それらで記述されたプロジェクトでも Onsen UI を利用できるようにしようと思っています。

<!--With this version, we added Material Design components and we also added a feature that automatically styles components based on the platform so that apps made with Onsen UI 2.0 will look native on both iOS and Android.-->
また、Onsen UI 2.0 ではマテリアルデザインに対応したコンポーネントを追加し、さらにプラットフォームに応じてコンポーネントのスタイルを自動的に切り替える機能を追加しました。これにより Onsen UI 2.0 で作ったアプリは iOS と Android の両方でネイティブの見た目になります。

<!--With the new version, we also released a [new website](https://onsen.io/). Apart from a new and cleaner design, we have also made an effort to improve the documentation and add more content to make it easier to get started with Onsen UI.-->
Onsen UI 2.0 では[新しい Web サイト](https://onsen.io/)もリリースしました。ただデザインを一新しただけでなく、Onsen UI をより使い始めやすくなるように、ドキュメントを改善・拡充しています。

<!--## Onsen UI is framework agnostic-->
## Onsen UI はフレームワーク非依存です

<!--Onsen UI is implemented in pure JavaScript and not dependent on any other framework or library. All components are created using the [Custom Elements API](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Custom_Elements). It's a simple API that is used to define custom tags and add custom behavior to them. Think of it as a way to extend the HTML language. Custom Elements is part of a larger concept called [Web Components](http://webcomponents.org/) that also includes Shadow DOM, HTML imports and the new `<template>` tag. It also means Onsen UI is future proof since it is living on the Web standard technology.-->
Onsen UI は純粋な JavaScript で実装されており、どのフレームワークやライブラリにも依存していません。全てのコンポーネントが [Custom Elements API](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Custom_Elements) で作られています。Custom Elements API は、独自のタグを定義し、それらのタグに独自の動作を紐付けることができるシンプルな API です。HTML 言語を拡張する一種の手段と思ってください。なお、Custom Elements はより大きな概念である [Web Components](http://webcomponents.org/) の一部です。
Web Components は Custom Elements に加えて Shadow DOM、HTML imports、`template` タグを含みます。Onsen UI が Web 標準の Custom Elements で実装されているということは、Onsen UI が時間経過によって陳腐化しないことを意味します。

<!--![Onsen UI uses Web Components](https://onsen.io/blog/content/images/2016/Sep/onsen_wc.png)-->
![Onsen UI は Web Components を使用しています](https://onsen.io/blog/content/images/2016/Sep/onsen_wc.png)

<!--Custom Elements are very easy to use. They are just like normal HTML tags and will be activated automatically when attached to the page. There is no compilation or bootstrapping required.-->
Custom Elements は非常に簡単に使えます。Custom Elements で作られたタグは通常の HTML タグと同じく、ページに接続される（attached）と同時に自動的に動き始めます。コンパイルやブートストラップを行う必要はありません。

<!--The following code will render a simple switch:-->
以下のコードでシンプルなスイッチ（`ons-switch`）が描画されます:

```html
<ons-switch checked></ons-switch>
<p>Switch is <span id="state">on</span>.</p>
```

<!--The Onsen UI elements work just like the built-in elements so we can attach some behavior to it with JavaScript:-->
この要素（`ons-switch`）には、ビルトイン要素と同じく、JavaScript で動作を紐付けることができます。

```javascript
var el = document.querySelector('ons-switch');
el.addEventListener('change', function(event) {
    var state = document.getElementById('state');
    state.innerHTML = event.target.checked ? 'on' : 'off';
});
```

<!--These few lines of code renders into this:-->
上記の数行のコードを動かすと以下のようになります:

<p data-height="300" data-theme-id="13819" data-slug-hash="bwEPVA" data-default-tab="js,result" data-user="argelius" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/argelius/pen/bwEPVA/">Switch example</a> by Andreas Argelius (<a href="http://codepen.io/argelius">@argelius</a>) on <a href="http://codepen.io">CodePen</a>.</p>
<script async src="//assets.codepen.io/assets/embed/ei.js"></script>

<!--For more information on our reasoning behind removing the Angular dependency and going full Web Components, I recommend you read [this great article](https://onsen.io/blog/onsen-ui-web-components/) written by [Fran Dios](https://twitter.com/frandiox), my fellow Onsen UI developer.-->
私たちが Angular 依存をやめて Web Components に完全移行した詳しい理由については、私の同僚で同じく Onsen UI デベロッパーの [Fran Dios](https://twitter.com/frandiox) が書いた[素晴らしい記事](https://onsen.io/blog/onsen-ui-web-components/)（英語記事）をご覧ください。

<!--## Designed for both iOS and Android-->
## iOS と Android に両対応

<!--The Onsen UI components have styles for both iOS and Android. When running on Android they will automatically display as Material Design while on iOS they will look like native iOS components. It also works well on Windows Phone (Microsoft Edge) that renders iOS style.-->
Onsen UI のコンポーネントは iOS と Android 両方のスタイルを備えています。Android 端末で Onsen UI を動かすと自動的にマテリアルデザインで表示され、iOS 端末で Onsen UI を動かすと自動的にネイティブ iOS コンポーネントの見た目で表示されます。また、Windows Phone (Microsoft Edge) でも利用できます。Windows Phone では iOS のスタイルで表示されます。

<!--![Automatic styling in Onsen UI](https://onsen.io/blog/content/images/2016/Jun/react_redux_onsen_weather.png)-->
![Onsen UI の機能: Automatic Styling](https://onsen.io/blog/content/images/2016/Jun/react_redux_onsen_weather.png)

<!--One of the challenges when developing hybrid apps is to make them look and feel like the native apps that the users are accustomed to. With automatic styling there is no need to spend a lot of time styling the components. Instead, you can let Onsen UI do it for you while you focus on the important part: creating the actual app. See more details in our [docs](/v2/docs/guide/js/#cross-platform-styling).-->
ハイブリッドアプリの開発で課題となるのは、ハイブリッドアプリを、ユーザが慣れ親しんでいる方のネイティブアプリと同じ見た目にすることです。しかし Automatic Styling があればそういったコンポーネントのスタイリングに時間を割く必要はなくなります。コンポーネントのスタイリングは Onsen UI にやらせておいて、代わりにそれよりも重要なアプリの根幹部分の実装に集中すれば良いのです。Automatic Styling の詳細については[ドキュメント](/v2/docs/guide/js/#cross-platform-styling)（英語）をご覧ください。

<!--## New and improved documentation-->
## 改善された新ドキュメント

<!--We have received feedback that the documentation on the previous website was hard to navigate and that it was sometimes difficult to know where to look for information about the components. Our [new documentation](/v2/docs/guide/js/) has been simplified and we believe it is now a lot easier to find what you are looking for.-->
以前の Web サイトに対しては、各コンポーネントの情報がどこにあるのか分かりにくいというフィードバックを頂いていました。そこで[新しいドキュメント](/v2/docs/guide/js/)ではシンプルなデザインを採用しました。以前よりも情報が見つけやすくなっていると思います。

<!--We have of course also updated both the guide and reference with all the new components that were added in Onsen UI 2.0. Since the documentation is one of the most important resources for Onsen UI developers, we will keep improving it going forward!-->
もちろん Onsen UI 2.0 で追加された全ての新コンポーネントについて、ガイドとリファレンスの両方をアップデート済みです。Onsen UI の利用者にとってドキュメントは最も重要な資料の一つですので、ドキュメントの改善は今後も継続していくつもりです。

<!--Another resource that we have added recently is the [interactive Onsen UI tutorial](/tutorial). This page lets you learn how to use all the components in Onsen UI and also how to use them with different frameworks and libraries such as AngularJS and React. You can also change the source code to play around with the components.-->
最近追加した他の資料としては、[対話的チュートリアル](/tutorial)（interactive tutorial）があります。Onsen UI の各コンポーネントの使い方はこのページを使って学ぶことができます。また、AngularJS や React のようなフレームワークやライブラリでどうやって Onsen UI のコンポーネントを使うのかも学ぶこともできます。ソースコードをその場で編集しながらコンポーネントを動かすこともできます。

<!--## Join the Onsen UI ecosystem-->
## Onsen UI のエコシステムを活用しましょう

<!--For questions about using Onsen UI we recommend you to check out [our growing community forum](https://community.onsen.io/). There are lots of knowledgeable and friendly people, eager to help you out.-->
Onsen UI を使っていて分からないことがあったら、是非[コミュニティフォーラム](https://community.onsen.io/)を使ってみてください。フォーラムメンバがきっとあなたを助けてくれます。

<!--If you want to request new features or if you have found a bug, please open an issue on our [GitHub page](http://github.com/OnsenUI/OnsenUI). We try to answer as quickly as possible.-->
新機能のリクエストやバグ報告を行いたいときは、[Onsen UI の GitHub ページ](http://github.com/OnsenUI/OnsenUI)に Issue を立ててください。なるべく早く対応します。

<!--## Help developers to get up to speed-->
## より迅速な開発のために

<!--Even with our effort to improve documentations, we know it is not perfect. And we need your help.-->
私たちは日々ドキュメントの改善に努めていますが、それが完璧でないことも分かっています。あなたの助けが必要です。

<!--For those of you who already have Onsen 2.0 experience, please join the [Onsen UI 2.0 Tutorial, Tips & Review Contest](https://monaca.io/contest-onsenui2/) and create blog posts and videos to help new users. -->
Onsen UI 2.0 をもう使っているという方は、是非 [Onsen UI 2.0 Tutorial, Tips & Review Contest](https://monaca.io/contest-onsenui2/) に参加して、新しいユーザを助けるためのブログ記事や動画を投稿してみてください。

<!--The contest starts today and the first phase will close in 2 weeks. Please check out [contest details](https://monaca.io/contest-onsenui2/) now. By giving back to the developer community, you also have a chance to win a prize!-->
コンテストは 2016/09/15 開始で、最初のフェイズは2週間で終了です。詳しくは[コンテストの詳細](https://monaca.io/contest-onsenui2/)をご覧ください。ぜひ参加して、賞品をゲットしてください！

<!--## Spread the word!-->
## 今回のリリースを広めてください！

<!--We hope you are as excited about this release as we are. If you like Onsen UI and would like to support the project, please make sure to star us [on GitHub](http://github.com/OnsenUI/OnsenUI). Also, we’d love it if you could help spreading this news far and wide.-->
今回のリリースに対して、私たち以上に興奮している方もいるかもしれません。もし Onsen UI が気に入って、このプロジェクトをサポートしたいという方がいたら、まず [Onsen UI の GitHub ページ](http://github.com/OnsenUI/OnsenUI)をスター済みか確認してください！そして今回のリリースを広めて頂ければ幸いです。

Happy coding!

（この記事は Onsen UI チームの [Andreas Argelius](https://twitter.com/a_argelius) が英語版 Monaca x Onsen ブログに投稿した [Onsen UI 2.0 is here!](https://onsen.io/blog/onsen-ui-2-is-here/) の翻訳です。）
